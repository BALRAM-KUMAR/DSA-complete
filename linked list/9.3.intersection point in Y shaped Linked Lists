
LinkList1 = 3->6->9->common
LinkList2 = 10->common
common = 15->30->NULL
Output: 15

                                                                       3
/* Linked List Node                                                     6
struct Node {                                    
  int data;
  struct Node *next;
  Node(int x) {
    data = x;
    next = NULL;
  }
}; */

//Function to find intersection point in Y shaped Linked Lists.
int intersectPoint(Node* head1, Node* head2)
{
    // Your Code Here
    int len1=0;
    int len2=0;
    Node *ptr1=head1;
    Node *ptr2=head2;
    while(ptr1){
        len1++;
        ptr1=ptr1->next;
    }
    while(ptr2){
        len2++;
        ptr2=ptr2->next;
    }
          ptr1=head1;
          ptr2=head2;
    
     int diff=abs(len1-len2);
     if(len1>len2)
     {
         for(int i=0;i<diff;i++){
             ptr1=ptr1->next;
         }
     }
     else if(len1<len2)
     {
         for(int i=0;i<diff;i++){
             ptr2=ptr2->next;
         }
     }
     while(ptr1!=ptr2){
         ptr1=ptr1->next;
         ptr2=ptr2->next;
     }
     if(ptr1)return ptr1->data;
     return -1;
    
}
